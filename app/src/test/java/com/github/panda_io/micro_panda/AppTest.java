/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.panda_io.micro_panda;

import org.junit.Test;
import static org.junit.Assert.*;

import java.io.BufferedWriter;
import java.io.FileWriter;

import com.github.panda_io.micro_panda.ast.Program;
import com.github.panda_io.micro_panda.builder.c.Builder;
import com.github.panda_io.micro_panda.parser.*;

public class AppTest {
    @Test
    public void testCBuilder() {
        Parser parser = new Parser(null);
        Program program = parser.getProgram();

        boolean success = true;

        success = parser.parseFile("./src/test/resource/console/write.mpd");
        assertTrue(success);
        assertFalse(program.hasError());

        success = parser.parseFile("./src/test/resource/assert.mpd");
        assertTrue(success);
        assertFalse(program.hasError());

        success = parser.parseFile("./src/test/resource/test/expression.mpd");
        assertTrue(success);
        assertFalse(program.hasError());

        success = parser.parseFile("./src/test/resource/test/statement.mpd");
        assertTrue(success);
        assertFalse(program.hasError());

        success = parser.parseFile("./src/test/resource/test/declaration.mpd");
        assertTrue(success);
        assertFalse(program.hasError());

        success = parser.parseFile("./src/test/resource/main.mpd");
        assertTrue(success);
        assertFalse(program.hasError());

        program.validate();
        program.printErrors();
        assertFalse(program.hasError());

        StringBuilder builder = Builder.build(program);

        BufferedWriter writer = null;
        try {
            writer = new BufferedWriter(new FileWriter("./src/test/resource/main.c"));
            writer.append(builder.toString());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (writer != null) {
                    writer.close();
                }
            } catch (Exception e) {
            }
        }
    }

    //public void testLLVMBuilder()
}
