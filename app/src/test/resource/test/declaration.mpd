namespace test;

public var cpu3 Cpu = {123, {456}};

public enum Level
{
    low,
    high
}

public enum Timer
{
    timer1 = 1,
    timer2,
    timer3,
    timer4
}

public struct Pwm
{
    public var freq u32;
}

public struct Cpu
{
    public var osc u32;
    public var pwm Pwm;

    public function frequency()
    {
        console.write_u32(123);
        console.write_u32(this.osc);
    }
}

public struct Gpu
{
    public var pwm pointer<Pwm>;
}

public function test_declaration() {
    // function
    var addOne add_one = increment;
    var value i32 = 99;
    value = addOne(value);
    assert(value == 100, "use function pointer to calculate 99 + 1, should equal 100");
    value = another_add_one(value);
    assert(value == 101, "use function pointer to calculate 100 + 1, should equal 101");
    value = do_something(increment, value);
    assert(value == 102, "use function wrapper to calculate 101 + 1, should equal 102");

    // struct
}

public function do_something(func add_one, value i32) i32 {
    return func(value);
}

public function increment(value i32) i32 {
    return value + 1;
}

public function add_one(value i32) i32;

public var another_add_one add_one = increment;