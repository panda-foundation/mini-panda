namespace container;

import libc;

public struct Allocator
{
    var size u32;
    var address []u8;

    public function allocate(size u32) []u8
    {
        this.deallocate();
        this.address = libc.calloc(size, 1);
        this.size = size;
        return this.address;
    }

    public function reallocate(size u32) []u8
    {
        if (this.address == null)
        {
            return this.allocate(size);
        }
        this.address = libc.realloc(this.address, size);
        if (this.size < size)
        {
            libc.memset(this.address[this.size], 0, (size - this.size));
        }
        this.size = size;
        return this.address;
    }

    public function deallocate()
    {
        if (this.address != null)
        {
            libc.free(this.address);
            this.address = null;
        }
    }

    public function capacity() u32
    {
        return this.size;
    }
}