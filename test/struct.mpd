namespace test;

import libc;

public struct Driver
{
    public var type u8;

    public function print(message []u8)
    {
        libc.puts(message);
        libc.printf("type:%d \n", this.type);
    }
}

public struct Printer
{
    public var line i32;
    public var buffer [8]u8;
    public var driver Driver;

    public function print(message []u8)
    {
        //this.driver.print(message);
    }
}

public function structs()
{
    libc.puts("============ test struct ============");
    var printer Printer = {100, {1, 2, 3, 4, 5, 6, 7, 8}, {99}};
    libc.printf("printer.line: %d \n", printer.line);
    libc.printf("printer.buffer[7]: %d \n", printer.buffer[7]);
    libc.printf("printer.driver.type: %d \n", printer.driver.type);

    printer.driver.print("hello printer!");
    //printer.print("hello printer!");
    /*
    call_print(data);
    call_array(data.array);*/
    

    //TO-DO initalizer

    //TO-DO const variable from const struct, array
}

/*
public function pass_struct_pointer(data pointer<Data>)
{
    data.integer = 3;
    data.print_integer();
}

public function pass_array(data []u8)
{
    data[2] = 2;
    libc.printf("array[2]: %d \n", data[2]);
}*/
